"""empty message

Revision ID: b6dd05884791
Revises: 
Create Date: 2019-09-12 13:57:36.246249

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b6dd05884791'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('genotype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mani_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organ',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('gene',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gene_name_id', sa.Integer(), nullable=False),
    sa.Column('genotype_gene_id', sa.Integer(), nullable=False),
    sa.Column('genotype_reporter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gene_name_id'], ['gene_name.id'], ),
    sa.ForeignKeyConstraint(['genotype_gene_id'], ['genotype.id'], ),
    sa.ForeignKeyConstraint(['genotype_reporter_id'], ['genotype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lookup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gene_name_id', sa.Integer(), nullable=False),
    sa.Column('organ_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('t_pos', sa.String(length=500), nullable=True),
    sa.Column('t_neg', sa.String(length=500), nullable=True),
    sa.Column('d_pos', sa.String(length=500), nullable=True),
    sa.Column('d_neg', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['gene_name_id'], ['gene_name.id'], ),
    sa.ForeignKeyConstraint(['organ_id'], ['organ.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=200), nullable=True),
    sa.Column('sex', sa.Boolean(), nullable=True),
    sa.Column('age', sa.String(length=40), nullable=True),
    sa.Column('gene_id', sa.Integer(), nullable=False),
    sa.Column('mani_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.id'], ),
    sa.ForeignKeyConstraint(['mani_type_id'], ['mani_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uberon', sa.String(length=200), nullable=True),
    sa.Column('slide_number', sa.String(length=200), nullable=True),
    sa.Column('slice_id', sa.String(length=200), nullable=True),
    sa.Column('z_step_size', sa.Float(), nullable=True),
    sa.Column('objective', sa.String(length=200), nullable=True),
    sa.Column('instrument', sa.String(length=200), nullable=True),
    sa.Column('wavelength', sa.String(length=200), nullable=True),
    sa.Column('checksum', sa.String(length=200), nullable=True),
    sa.Column('img_path', sa.String(length=500), nullable=True),
    sa.Column('organ_id', sa.Integer(), nullable=False),
    sa.Column('mouse_id', sa.Integer(), nullable=True),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('orientation', sa.String(length=200), nullable=True),
    sa.Column('combined_data', sa.String(length=800), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.ForeignKeyConstraint(['mouse_id'], ['mouse.id'], ),
    sa.ForeignKeyConstraint(['organ_id'], ['organ.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('combined_data')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('slice')
    op.drop_table('mouse')
    op.drop_table('lookup')
    op.drop_table('gene')
    op.drop_table('organ')
    op.drop_table('mani_type')
    op.drop_table('genotype')
    op.drop_table('gene_name')
    op.drop_table('experiment')
    # ### end Alembic commands ###
